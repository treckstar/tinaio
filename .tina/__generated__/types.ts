//@ts-nocheck
  // DO NOT MODIFY THIS FILE. This file is automatically generated by Tina
  export function gql(strings: TemplateStringsArray, ...args: string[]): string {
    let str = ''
    strings.forEach((string, i) => {
      str += string + (args[i] || '')
    })
    return str
  }
  export type Maybe<T> = T | null;
export type InputMaybe<T> = Maybe<T>;
export type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] };
export type MakeOptional<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]?: Maybe<T[SubKey]> };
export type MakeMaybe<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]: Maybe<T[SubKey]> };
/** All built-in and custom scalars, mapped to their actual values */
export type Scalars = {
  ID: string;
  String: string;
  Boolean: boolean;
  Int: number;
  Float: number;
  /** References another document, used as a foreign key */
  Reference: any;
  JSON: any;
};

export type SystemInfo = {
  __typename?: 'SystemInfo';
  filename: Scalars['String'];
  title?: Maybe<Scalars['String']>;
  basename: Scalars['String'];
  breadcrumbs: Array<Scalars['String']>;
  path: Scalars['String'];
  relativePath: Scalars['String'];
  extension: Scalars['String'];
  template: Scalars['String'];
  collection: Collection;
};


export type SystemInfoBreadcrumbsArgs = {
  excludeExtension?: InputMaybe<Scalars['Boolean']>;
};

export type PageInfo = {
  __typename?: 'PageInfo';
  hasPreviousPage: Scalars['Boolean'];
  hasNextPage: Scalars['Boolean'];
  startCursor: Scalars['String'];
  endCursor: Scalars['String'];
};

export type Node = {
  id: Scalars['ID'];
};

export type Document = {
  id: Scalars['ID'];
  _sys?: Maybe<SystemInfo>;
  _values: Scalars['JSON'];
};

/** A relay-compliant pagination connection */
export type Connection = {
  totalCount: Scalars['Float'];
  pageInfo: PageInfo;
};

export type Query = {
  __typename?: 'Query';
  getOptimizedQuery?: Maybe<Scalars['String']>;
  collection: Collection;
  collections: Array<Collection>;
  node: Node;
  document: DocumentNode;
  page: Page;
  pageConnection: PageConnection;
  doc: Doc;
  docConnection: DocConnection;
  post: Post;
  postConnection: PostConnection;
  abtest: Abtest;
  abtestConnection: AbtestConnection;
};


export type QueryGetOptimizedQueryArgs = {
  queryString: Scalars['String'];
};


export type QueryCollectionArgs = {
  collection?: InputMaybe<Scalars['String']>;
};


export type QueryNodeArgs = {
  id?: InputMaybe<Scalars['String']>;
};


export type QueryDocumentArgs = {
  collection?: InputMaybe<Scalars['String']>;
  relativePath?: InputMaybe<Scalars['String']>;
};


export type QueryPageArgs = {
  relativePath?: InputMaybe<Scalars['String']>;
};


export type QueryPageConnectionArgs = {
  before?: InputMaybe<Scalars['String']>;
  after?: InputMaybe<Scalars['String']>;
  first?: InputMaybe<Scalars['Float']>;
  last?: InputMaybe<Scalars['Float']>;
  sort?: InputMaybe<Scalars['String']>;
  filter?: InputMaybe<PageFilter>;
};


export type QueryDocArgs = {
  relativePath?: InputMaybe<Scalars['String']>;
};


export type QueryDocConnectionArgs = {
  before?: InputMaybe<Scalars['String']>;
  after?: InputMaybe<Scalars['String']>;
  first?: InputMaybe<Scalars['Float']>;
  last?: InputMaybe<Scalars['Float']>;
  sort?: InputMaybe<Scalars['String']>;
  filter?: InputMaybe<DocFilter>;
};


export type QueryPostArgs = {
  relativePath?: InputMaybe<Scalars['String']>;
};


export type QueryPostConnectionArgs = {
  before?: InputMaybe<Scalars['String']>;
  after?: InputMaybe<Scalars['String']>;
  first?: InputMaybe<Scalars['Float']>;
  last?: InputMaybe<Scalars['Float']>;
  sort?: InputMaybe<Scalars['String']>;
  filter?: InputMaybe<PostFilter>;
};


export type QueryAbtestArgs = {
  relativePath?: InputMaybe<Scalars['String']>;
};


export type QueryAbtestConnectionArgs = {
  before?: InputMaybe<Scalars['String']>;
  after?: InputMaybe<Scalars['String']>;
  first?: InputMaybe<Scalars['Float']>;
  last?: InputMaybe<Scalars['Float']>;
  sort?: InputMaybe<Scalars['String']>;
  filter?: InputMaybe<AbtestFilter>;
};

export type DocumentFilter = {
  page?: InputMaybe<PageFilter>;
  doc?: InputMaybe<DocFilter>;
  post?: InputMaybe<PostFilter>;
  abtest?: InputMaybe<AbtestFilter>;
};

export type DocumentConnectionEdges = {
  __typename?: 'DocumentConnectionEdges';
  cursor: Scalars['String'];
  node?: Maybe<DocumentNode>;
};

export type DocumentConnection = Connection & {
  __typename?: 'DocumentConnection';
  pageInfo: PageInfo;
  totalCount: Scalars['Float'];
  edges?: Maybe<Array<Maybe<DocumentConnectionEdges>>>;
};

export type Collection = {
  __typename?: 'Collection';
  name: Scalars['String'];
  slug: Scalars['String'];
  label?: Maybe<Scalars['String']>;
  path: Scalars['String'];
  format?: Maybe<Scalars['String']>;
  matches?: Maybe<Scalars['String']>;
  templates?: Maybe<Array<Maybe<Scalars['JSON']>>>;
  fields?: Maybe<Array<Maybe<Scalars['JSON']>>>;
  documents: DocumentConnection;
};


export type CollectionDocumentsArgs = {
  before?: InputMaybe<Scalars['String']>;
  after?: InputMaybe<Scalars['String']>;
  first?: InputMaybe<Scalars['Float']>;
  last?: InputMaybe<Scalars['Float']>;
  sort?: InputMaybe<Scalars['String']>;
  filter?: InputMaybe<DocumentFilter>;
};

export type DocumentNode = Page | Doc | Post | Abtest;

export type PageSeo = {
  __typename?: 'PageSeo';
  title?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
};

export type PageBlocksHeroActions = {
  __typename?: 'PageBlocksHeroActions';
  label?: Maybe<Scalars['String']>;
  icon?: Maybe<Scalars['Boolean']>;
  variant?: Maybe<Scalars['String']>;
  size?: Maybe<Scalars['String']>;
  url?: Maybe<Scalars['String']>;
};

export type PageBlocksHero = {
  __typename?: 'PageBlocksHero';
  headline?: Maybe<Scalars['String']>;
  text?: Maybe<Scalars['String']>;
  actions?: Maybe<Array<Maybe<PageBlocksHeroActions>>>;
  videoSrc?: Maybe<Scalars['String']>;
};

export type PageBlocksFeaturesItemsFeatureMedia = {
  __typename?: 'PageBlocksFeaturesItemsFeatureMedia';
  src?: Maybe<Scalars['String']>;
  videoSrc?: Maybe<Scalars['String']>;
  cli?: Maybe<Scalars['Boolean']>;
};

export type PageBlocksFeaturesItemsFeatureActions = {
  __typename?: 'PageBlocksFeaturesItemsFeatureActions';
  label?: Maybe<Scalars['String']>;
  icon?: Maybe<Scalars['Boolean']>;
  variant?: Maybe<Scalars['String']>;
  size?: Maybe<Scalars['String']>;
  url?: Maybe<Scalars['String']>;
};

export type PageBlocksFeaturesItemsFeature = {
  __typename?: 'PageBlocksFeaturesItemsFeature';
  headline?: Maybe<Scalars['String']>;
  text?: Maybe<Scalars['String']>;
  media?: Maybe<PageBlocksFeaturesItemsFeatureMedia>;
  actions?: Maybe<Array<Maybe<PageBlocksFeaturesItemsFeatureActions>>>;
};

export type PageBlocksFeaturesItems = PageBlocksFeaturesItemsFeature;

export type PageBlocksFeatures = {
  __typename?: 'PageBlocksFeatures';
  items?: Maybe<Array<Maybe<PageBlocksFeaturesItems>>>;
};

export type PageBlocksFlyingActions = {
  __typename?: 'PageBlocksFlyingActions';
  label?: Maybe<Scalars['String']>;
  icon?: Maybe<Scalars['Boolean']>;
  variant?: Maybe<Scalars['String']>;
  size?: Maybe<Scalars['String']>;
  url?: Maybe<Scalars['String']>;
};

export type PageBlocksFlying = {
  __typename?: 'PageBlocksFlying';
  headline?: Maybe<Scalars['String']>;
  text?: Maybe<Scalars['String']>;
  actions?: Maybe<Array<Maybe<PageBlocksFlyingActions>>>;
};

export type PageBlocksPricingBaseActions = {
  __typename?: 'PageBlocksPricingBaseActions';
  label?: Maybe<Scalars['String']>;
  icon?: Maybe<Scalars['Boolean']>;
  variant?: Maybe<Scalars['String']>;
  size?: Maybe<Scalars['String']>;
  url?: Maybe<Scalars['String']>;
};

export type PageBlocksPricingBase = {
  __typename?: 'PageBlocksPricingBase';
  name?: Maybe<Scalars['String']>;
  price?: Maybe<Scalars['String']>;
  interval?: Maybe<Scalars['String']>;
  body?: Maybe<Scalars['JSON']>;
  actions?: Maybe<Array<Maybe<PageBlocksPricingBaseActions>>>;
};

export type PageBlocksPricingPlansActions = {
  __typename?: 'PageBlocksPricingPlansActions';
  label?: Maybe<Scalars['String']>;
  icon?: Maybe<Scalars['Boolean']>;
  variant?: Maybe<Scalars['String']>;
  size?: Maybe<Scalars['String']>;
  url?: Maybe<Scalars['String']>;
};

export type PageBlocksPricingPlans = {
  __typename?: 'PageBlocksPricingPlans';
  name?: Maybe<Scalars['String']>;
  price?: Maybe<Scalars['String']>;
  interval?: Maybe<Scalars['String']>;
  body?: Maybe<Scalars['JSON']>;
  actions?: Maybe<Array<Maybe<PageBlocksPricingPlansActions>>>;
};

export type PageBlocksPricing = {
  __typename?: 'PageBlocksPricing';
  intro?: Maybe<Scalars['JSON']>;
  base?: Maybe<PageBlocksPricingBase>;
  plans?: Maybe<Array<Maybe<PageBlocksPricingPlans>>>;
};

export type PageBlocksFaqQuestions = {
  __typename?: 'PageBlocksFaqQuestions';
  question?: Maybe<Scalars['String']>;
  answer?: Maybe<Scalars['JSON']>;
};

export type PageBlocksFaq = {
  __typename?: 'PageBlocksFaq';
  title?: Maybe<Scalars['String']>;
  intro?: Maybe<Scalars['JSON']>;
  questions?: Maybe<Array<Maybe<PageBlocksFaqQuestions>>>;
  color?: Maybe<Scalars['String']>;
};

export type PageBlocksContentOptions = {
  __typename?: 'PageBlocksContentOptions';
  narrow?: Maybe<Scalars['Boolean']>;
  color?: Maybe<Scalars['String']>;
  align?: Maybe<Scalars['String']>;
};

export type PageBlocksContent = {
  __typename?: 'PageBlocksContent';
  options?: Maybe<PageBlocksContentOptions>;
  content?: Maybe<Scalars['JSON']>;
};

export type PageBlocksShowcaseItemsMedia = {
  __typename?: 'PageBlocksShowcaseItemsMedia';
  src?: Maybe<Scalars['String']>;
};

export type PageBlocksShowcaseItems = {
  __typename?: 'PageBlocksShowcaseItems';
  headline?: Maybe<Scalars['String']>;
  text?: Maybe<Scalars['String']>;
  url?: Maybe<Scalars['String']>;
  media?: Maybe<PageBlocksShowcaseItemsMedia>;
};

export type PageBlocksShowcase = {
  __typename?: 'PageBlocksShowcase';
  items?: Maybe<Array<Maybe<PageBlocksShowcaseItems>>>;
};

export type PageBlocksColumnsOptions = {
  __typename?: 'PageBlocksColumnsOptions';
  columns?: Maybe<Scalars['String']>;
  narrow?: Maybe<Scalars['Boolean']>;
  color?: Maybe<Scalars['String']>;
  align?: Maybe<Scalars['String']>;
};

export type PageBlocksColumns = {
  __typename?: 'PageBlocksColumns';
  options?: Maybe<PageBlocksColumnsOptions>;
  columnOne?: Maybe<Scalars['JSON']>;
  columnTwo?: Maybe<Scalars['JSON']>;
};

export type PageBlocksStory = {
  __typename?: 'PageBlocksStory';
  title?: Maybe<Scalars['String']>;
};

export type PageBlocksFeatureGridItemsActions = {
  __typename?: 'PageBlocksFeatureGridItemsActions';
  label?: Maybe<Scalars['String']>;
  icon?: Maybe<Scalars['Boolean']>;
  variant?: Maybe<Scalars['String']>;
  size?: Maybe<Scalars['String']>;
  url?: Maybe<Scalars['String']>;
};

export type PageBlocksFeatureGridItems = {
  __typename?: 'PageBlocksFeatureGridItems';
  headline?: Maybe<Scalars['String']>;
  text?: Maybe<Scalars['String']>;
  actions?: Maybe<Array<Maybe<PageBlocksFeatureGridItemsActions>>>;
};

export type PageBlocksFeatureGrid = {
  __typename?: 'PageBlocksFeatureGrid';
  items?: Maybe<Array<Maybe<PageBlocksFeatureGridItems>>>;
};

export type PageBlocksLogoGridItems = {
  __typename?: 'PageBlocksLogoGridItems';
  name?: Maybe<Scalars['String']>;
  logo?: Maybe<Scalars['String']>;
  size?: Maybe<Scalars['Float']>;
};

export type PageBlocksLogoGrid = {
  __typename?: 'PageBlocksLogoGrid';
  title?: Maybe<Scalars['String']>;
  link?: Maybe<Scalars['String']>;
  items?: Maybe<Array<Maybe<PageBlocksLogoGridItems>>>;
};

export type PageBlocksRoadmapGridItemsActions = {
  __typename?: 'PageBlocksRoadmapGridItemsActions';
  label?: Maybe<Scalars['String']>;
  icon?: Maybe<Scalars['Boolean']>;
  variant?: Maybe<Scalars['String']>;
  size?: Maybe<Scalars['String']>;
  url?: Maybe<Scalars['String']>;
};

export type PageBlocksRoadmapGridItems = {
  __typename?: 'PageBlocksRoadmapGridItems';
  headline?: Maybe<Scalars['String']>;
  status?: Maybe<Scalars['String']>;
  content?: Maybe<Scalars['JSON']>;
  actions?: Maybe<Array<Maybe<PageBlocksRoadmapGridItemsActions>>>;
};

export type PageBlocksRoadmapGridOptions = {
  __typename?: 'PageBlocksRoadmapGridOptions';
  paddingTop?: Maybe<Scalars['Boolean']>;
  paddingBottom?: Maybe<Scalars['Boolean']>;
};

export type PageBlocksRoadmapGrid = {
  __typename?: 'PageBlocksRoadmapGrid';
  headline?: Maybe<Scalars['String']>;
  items?: Maybe<Array<Maybe<PageBlocksRoadmapGridItems>>>;
  options?: Maybe<PageBlocksRoadmapGridOptions>;
};

export type PageBlocksRecentPosts = {
  __typename?: 'PageBlocksRecentPosts';
  title?: Maybe<Scalars['String']>;
};

export type PageBlocks = PageBlocksHero | PageBlocksFeatures | PageBlocksFlying | PageBlocksPricing | PageBlocksFaq | PageBlocksContent | PageBlocksShowcase | PageBlocksColumns | PageBlocksStory | PageBlocksFeatureGrid | PageBlocksLogoGrid | PageBlocksRoadmapGrid | PageBlocksRecentPosts;

export type Page = Node & Document & {
  __typename?: 'Page';
  seo?: Maybe<PageSeo>;
  blocks?: Maybe<Array<Maybe<PageBlocks>>>;
  id: Scalars['ID'];
  _sys: SystemInfo;
  _values: Scalars['JSON'];
};

export type StringFilter = {
  startsWith?: InputMaybe<Scalars['String']>;
  eq?: InputMaybe<Scalars['String']>;
  exists?: InputMaybe<Scalars['Boolean']>;
  in?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
};

export type PageSeoFilter = {
  title?: InputMaybe<StringFilter>;
  description?: InputMaybe<StringFilter>;
};

export type BooleanFilter = {
  eq?: InputMaybe<Scalars['Boolean']>;
  exists?: InputMaybe<Scalars['Boolean']>;
};

export type PageBlocksHeroActionsFilter = {
  label?: InputMaybe<StringFilter>;
  icon?: InputMaybe<BooleanFilter>;
  variant?: InputMaybe<StringFilter>;
  size?: InputMaybe<StringFilter>;
  url?: InputMaybe<StringFilter>;
};

export type PageBlocksHeroFilter = {
  headline?: InputMaybe<StringFilter>;
  text?: InputMaybe<StringFilter>;
  actions?: InputMaybe<PageBlocksHeroActionsFilter>;
  videoSrc?: InputMaybe<StringFilter>;
};

export type PageBlocksFeaturesItemsFeatureMediaFilter = {
  src?: InputMaybe<StringFilter>;
  videoSrc?: InputMaybe<StringFilter>;
  cli?: InputMaybe<BooleanFilter>;
};

export type PageBlocksFeaturesItemsFeatureActionsFilter = {
  label?: InputMaybe<StringFilter>;
  icon?: InputMaybe<BooleanFilter>;
  variant?: InputMaybe<StringFilter>;
  size?: InputMaybe<StringFilter>;
  url?: InputMaybe<StringFilter>;
};

export type PageBlocksFeaturesItemsFeatureFilter = {
  headline?: InputMaybe<StringFilter>;
  text?: InputMaybe<StringFilter>;
  media?: InputMaybe<PageBlocksFeaturesItemsFeatureMediaFilter>;
  actions?: InputMaybe<PageBlocksFeaturesItemsFeatureActionsFilter>;
};

export type PageBlocksFeaturesItemsFilter = {
  feature?: InputMaybe<PageBlocksFeaturesItemsFeatureFilter>;
};

export type PageBlocksFeaturesFilter = {
  items?: InputMaybe<PageBlocksFeaturesItemsFilter>;
};

export type PageBlocksFlyingActionsFilter = {
  label?: InputMaybe<StringFilter>;
  icon?: InputMaybe<BooleanFilter>;
  variant?: InputMaybe<StringFilter>;
  size?: InputMaybe<StringFilter>;
  url?: InputMaybe<StringFilter>;
};

export type PageBlocksFlyingFilter = {
  headline?: InputMaybe<StringFilter>;
  text?: InputMaybe<StringFilter>;
  actions?: InputMaybe<PageBlocksFlyingActionsFilter>;
};

export type RichTextFilter = {
  startsWith?: InputMaybe<Scalars['String']>;
  eq?: InputMaybe<Scalars['String']>;
  exists?: InputMaybe<Scalars['Boolean']>;
};

export type PageBlocksPricingBaseActionsFilter = {
  label?: InputMaybe<StringFilter>;
  icon?: InputMaybe<BooleanFilter>;
  variant?: InputMaybe<StringFilter>;
  size?: InputMaybe<StringFilter>;
  url?: InputMaybe<StringFilter>;
};

export type PageBlocksPricingBaseFilter = {
  name?: InputMaybe<StringFilter>;
  price?: InputMaybe<StringFilter>;
  interval?: InputMaybe<StringFilter>;
  body?: InputMaybe<RichTextFilter>;
  actions?: InputMaybe<PageBlocksPricingBaseActionsFilter>;
};

export type PageBlocksPricingPlansActionsFilter = {
  label?: InputMaybe<StringFilter>;
  icon?: InputMaybe<BooleanFilter>;
  variant?: InputMaybe<StringFilter>;
  size?: InputMaybe<StringFilter>;
  url?: InputMaybe<StringFilter>;
};

export type PageBlocksPricingPlansFilter = {
  name?: InputMaybe<StringFilter>;
  price?: InputMaybe<StringFilter>;
  interval?: InputMaybe<StringFilter>;
  body?: InputMaybe<RichTextFilter>;
  actions?: InputMaybe<PageBlocksPricingPlansActionsFilter>;
};

export type PageBlocksPricingFilter = {
  intro?: InputMaybe<RichTextFilter>;
  base?: InputMaybe<PageBlocksPricingBaseFilter>;
  plans?: InputMaybe<PageBlocksPricingPlansFilter>;
};

export type PageBlocksFaqQuestionsFilter = {
  question?: InputMaybe<StringFilter>;
  answer?: InputMaybe<RichTextFilter>;
};

export type PageBlocksFaqFilter = {
  title?: InputMaybe<StringFilter>;
  intro?: InputMaybe<RichTextFilter>;
  questions?: InputMaybe<PageBlocksFaqQuestionsFilter>;
  color?: InputMaybe<StringFilter>;
};

export type PageBlocksContentOptionsFilter = {
  narrow?: InputMaybe<BooleanFilter>;
  color?: InputMaybe<StringFilter>;
  align?: InputMaybe<StringFilter>;
};

export type PageBlocksContentContentActionsFilter = {
  label?: InputMaybe<StringFilter>;
  icon?: InputMaybe<BooleanFilter>;
  variant?: InputMaybe<StringFilter>;
  size?: InputMaybe<StringFilter>;
  url?: InputMaybe<StringFilter>;
};

export type PageBlocksContentContentSocialFilter = {
  tina?: InputMaybe<StringFilter>;
  discord?: InputMaybe<StringFilter>;
  github?: InputMaybe<StringFilter>;
  twitter?: InputMaybe<StringFilter>;
};

export type PageBlocksContentContentNewsletterFilter = {
  style?: InputMaybe<StringFilter>;
};

export type PageBlocksContentContentFilter = {
  actions?: InputMaybe<PageBlocksContentContentActionsFilter>;
  social?: InputMaybe<PageBlocksContentContentSocialFilter>;
  newsletter?: InputMaybe<PageBlocksContentContentNewsletterFilter>;
};

export type PageBlocksContentFilter = {
  options?: InputMaybe<PageBlocksContentOptionsFilter>;
  content?: InputMaybe<PageBlocksContentContentFilter>;
};

export type PageBlocksShowcaseItemsMediaFilter = {
  src?: InputMaybe<StringFilter>;
};

export type PageBlocksShowcaseItemsFilter = {
  headline?: InputMaybe<StringFilter>;
  text?: InputMaybe<StringFilter>;
  url?: InputMaybe<StringFilter>;
  media?: InputMaybe<PageBlocksShowcaseItemsMediaFilter>;
};

export type PageBlocksShowcaseFilter = {
  items?: InputMaybe<PageBlocksShowcaseItemsFilter>;
};

export type PageBlocksColumnsOptionsFilter = {
  columns?: InputMaybe<StringFilter>;
  narrow?: InputMaybe<BooleanFilter>;
  color?: InputMaybe<StringFilter>;
  align?: InputMaybe<StringFilter>;
};

export type PageBlocksColumnsColumnOneActionsFilter = {
  label?: InputMaybe<StringFilter>;
  icon?: InputMaybe<BooleanFilter>;
  variant?: InputMaybe<StringFilter>;
  size?: InputMaybe<StringFilter>;
  url?: InputMaybe<StringFilter>;
};

export type PageBlocksColumnsColumnOneSocialFilter = {
  tina?: InputMaybe<StringFilter>;
  discord?: InputMaybe<StringFilter>;
  github?: InputMaybe<StringFilter>;
  twitter?: InputMaybe<StringFilter>;
};

export type PageBlocksColumnsColumnOneNewsletterFilter = {
  style?: InputMaybe<StringFilter>;
};

export type PageBlocksColumnsColumnOneFilter = {
  actions?: InputMaybe<PageBlocksColumnsColumnOneActionsFilter>;
  social?: InputMaybe<PageBlocksColumnsColumnOneSocialFilter>;
  newsletter?: InputMaybe<PageBlocksColumnsColumnOneNewsletterFilter>;
};

export type PageBlocksColumnsColumnTwoActionsFilter = {
  label?: InputMaybe<StringFilter>;
  icon?: InputMaybe<BooleanFilter>;
  variant?: InputMaybe<StringFilter>;
  size?: InputMaybe<StringFilter>;
  url?: InputMaybe<StringFilter>;
};

export type PageBlocksColumnsColumnTwoSocialFilter = {
  tina?: InputMaybe<StringFilter>;
  discord?: InputMaybe<StringFilter>;
  github?: InputMaybe<StringFilter>;
  twitter?: InputMaybe<StringFilter>;
};

export type PageBlocksColumnsColumnTwoNewsletterFilter = {
  style?: InputMaybe<StringFilter>;
};

export type PageBlocksColumnsColumnTwoFilter = {
  actions?: InputMaybe<PageBlocksColumnsColumnTwoActionsFilter>;
  social?: InputMaybe<PageBlocksColumnsColumnTwoSocialFilter>;
  newsletter?: InputMaybe<PageBlocksColumnsColumnTwoNewsletterFilter>;
};

export type PageBlocksColumnsFilter = {
  options?: InputMaybe<PageBlocksColumnsOptionsFilter>;
  columnOne?: InputMaybe<PageBlocksColumnsColumnOneFilter>;
  columnTwo?: InputMaybe<PageBlocksColumnsColumnTwoFilter>;
};

export type PageBlocksStoryFilter = {
  title?: InputMaybe<StringFilter>;
};

export type PageBlocksFeatureGridItemsActionsFilter = {
  label?: InputMaybe<StringFilter>;
  icon?: InputMaybe<BooleanFilter>;
  variant?: InputMaybe<StringFilter>;
  size?: InputMaybe<StringFilter>;
  url?: InputMaybe<StringFilter>;
};

export type PageBlocksFeatureGridItemsFilter = {
  headline?: InputMaybe<StringFilter>;
  text?: InputMaybe<StringFilter>;
  actions?: InputMaybe<PageBlocksFeatureGridItemsActionsFilter>;
};

export type PageBlocksFeatureGridFilter = {
  items?: InputMaybe<PageBlocksFeatureGridItemsFilter>;
};

export type NumberFilter = {
  lt?: InputMaybe<Scalars['Float']>;
  lte?: InputMaybe<Scalars['Float']>;
  gte?: InputMaybe<Scalars['Float']>;
  gt?: InputMaybe<Scalars['Float']>;
  eq?: InputMaybe<Scalars['Float']>;
  exists?: InputMaybe<Scalars['Boolean']>;
  in?: InputMaybe<Array<InputMaybe<Scalars['Float']>>>;
};

export type PageBlocksLogoGridItemsFilter = {
  name?: InputMaybe<StringFilter>;
  logo?: InputMaybe<StringFilter>;
  size?: InputMaybe<NumberFilter>;
};

export type PageBlocksLogoGridFilter = {
  title?: InputMaybe<StringFilter>;
  link?: InputMaybe<StringFilter>;
  items?: InputMaybe<PageBlocksLogoGridItemsFilter>;
};

export type PageBlocksRoadmapGridItemsActionsFilter = {
  label?: InputMaybe<StringFilter>;
  icon?: InputMaybe<BooleanFilter>;
  variant?: InputMaybe<StringFilter>;
  size?: InputMaybe<StringFilter>;
  url?: InputMaybe<StringFilter>;
};

export type PageBlocksRoadmapGridItemsFilter = {
  headline?: InputMaybe<StringFilter>;
  status?: InputMaybe<StringFilter>;
  content?: InputMaybe<RichTextFilter>;
  actions?: InputMaybe<PageBlocksRoadmapGridItemsActionsFilter>;
};

export type PageBlocksRoadmapGridOptionsFilter = {
  paddingTop?: InputMaybe<BooleanFilter>;
  paddingBottom?: InputMaybe<BooleanFilter>;
};

export type PageBlocksRoadmapGridFilter = {
  headline?: InputMaybe<StringFilter>;
  items?: InputMaybe<PageBlocksRoadmapGridItemsFilter>;
  options?: InputMaybe<PageBlocksRoadmapGridOptionsFilter>;
};

export type PageBlocksRecentPostsFilter = {
  title?: InputMaybe<StringFilter>;
};

export type PageBlocksFilter = {
  hero?: InputMaybe<PageBlocksHeroFilter>;
  features?: InputMaybe<PageBlocksFeaturesFilter>;
  flying?: InputMaybe<PageBlocksFlyingFilter>;
  pricing?: InputMaybe<PageBlocksPricingFilter>;
  faq?: InputMaybe<PageBlocksFaqFilter>;
  content?: InputMaybe<PageBlocksContentFilter>;
  showcase?: InputMaybe<PageBlocksShowcaseFilter>;
  columns?: InputMaybe<PageBlocksColumnsFilter>;
  story?: InputMaybe<PageBlocksStoryFilter>;
  featureGrid?: InputMaybe<PageBlocksFeatureGridFilter>;
  logoGrid?: InputMaybe<PageBlocksLogoGridFilter>;
  roadmapGrid?: InputMaybe<PageBlocksRoadmapGridFilter>;
  recentPosts?: InputMaybe<PageBlocksRecentPostsFilter>;
};

export type PageFilter = {
  seo?: InputMaybe<PageSeoFilter>;
  blocks?: InputMaybe<PageBlocksFilter>;
};

export type PageConnectionEdges = {
  __typename?: 'PageConnectionEdges';
  cursor: Scalars['String'];
  node?: Maybe<Page>;
};

export type PageConnection = Connection & {
  __typename?: 'PageConnection';
  pageInfo: PageInfo;
  totalCount: Scalars['Float'];
  edges?: Maybe<Array<Maybe<PageConnectionEdges>>>;
};

export type Doc = Node & Document & {
  __typename?: 'Doc';
  title?: Maybe<Scalars['String']>;
  last_edited?: Maybe<Scalars['String']>;
  prev?: Maybe<Scalars['String']>;
  next?: Maybe<Scalars['String']>;
  body?: Maybe<Scalars['JSON']>;
  id: Scalars['ID'];
  _sys: SystemInfo;
  _values: Scalars['JSON'];
};

export type DatetimeFilter = {
  after?: InputMaybe<Scalars['String']>;
  before?: InputMaybe<Scalars['String']>;
  eq?: InputMaybe<Scalars['String']>;
  exists?: InputMaybe<Scalars['Boolean']>;
  in?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
};

export type DocFilter = {
  title?: InputMaybe<StringFilter>;
  last_edited?: InputMaybe<DatetimeFilter>;
  prev?: InputMaybe<StringFilter>;
  next?: InputMaybe<StringFilter>;
  body?: InputMaybe<RichTextFilter>;
};

export type DocConnectionEdges = {
  __typename?: 'DocConnectionEdges';
  cursor: Scalars['String'];
  node?: Maybe<Doc>;
};

export type DocConnection = Connection & {
  __typename?: 'DocConnection';
  pageInfo: PageInfo;
  totalCount: Scalars['Float'];
  edges?: Maybe<Array<Maybe<DocConnectionEdges>>>;
};

export type PostPrev = Post;

export type PostNext = Post;

export type Post = Node & Document & {
  __typename?: 'Post';
  title: Scalars['String'];
  date?: Maybe<Scalars['String']>;
  last_edited?: Maybe<Scalars['String']>;
  author?: Maybe<Scalars['String']>;
  prev?: Maybe<PostPrev>;
  next?: Maybe<PostNext>;
  body?: Maybe<Scalars['JSON']>;
  id: Scalars['ID'];
  _sys: SystemInfo;
  _values: Scalars['JSON'];
};

export type PostPrevFilter = {
  post?: InputMaybe<PostFilter>;
};

export type PostNextFilter = {
  post?: InputMaybe<PostFilter>;
};

export type PostBodyYoutubeFilter = {
  embedSrc?: InputMaybe<StringFilter>;
};

export type PostBodyIframeFilter = {
  iframeSrc?: InputMaybe<StringFilter>;
  height?: InputMaybe<NumberFilter>;
};

export type PostBodyCreateAppCtaFilter = {
  ctaText?: InputMaybe<StringFilter>;
  cliText?: InputMaybe<StringFilter>;
};

export type PostBodyCalloutFilter = {
  title?: InputMaybe<StringFilter>;
  description?: InputMaybe<StringFilter>;
  url?: InputMaybe<StringFilter>;
  buttonText?: InputMaybe<StringFilter>;
};

export type PostBodyCodesandboxFilter = {
  embedSrc?: InputMaybe<StringFilter>;
  title?: InputMaybe<StringFilter>;
};

export type PostBodyDiagramFilter = {
  src?: InputMaybe<StringFilter>;
  alt?: InputMaybe<StringFilter>;
};

export type ImageFilter = {
  startsWith?: InputMaybe<Scalars['String']>;
  eq?: InputMaybe<Scalars['String']>;
  exists?: InputMaybe<Scalars['Boolean']>;
  in?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
};

export type PostBodyWideImageFilter = {
  src?: InputMaybe<ImageFilter>;
  alt?: InputMaybe<StringFilter>;
};

export type PostBodyCustomFieldComponentDemoFilter = {
  test?: InputMaybe<StringFilter>;
};

export type PostBodyFilter = {
  Youtube?: InputMaybe<PostBodyYoutubeFilter>;
  Iframe?: InputMaybe<PostBodyIframeFilter>;
  CreateAppCta?: InputMaybe<PostBodyCreateAppCtaFilter>;
  Callout?: InputMaybe<PostBodyCalloutFilter>;
  Codesandbox?: InputMaybe<PostBodyCodesandboxFilter>;
  Diagram?: InputMaybe<PostBodyDiagramFilter>;
  WideImage?: InputMaybe<PostBodyWideImageFilter>;
  CustomFieldComponentDemo?: InputMaybe<PostBodyCustomFieldComponentDemoFilter>;
};

export type PostFilter = {
  title?: InputMaybe<StringFilter>;
  date?: InputMaybe<DatetimeFilter>;
  last_edited?: InputMaybe<DatetimeFilter>;
  author?: InputMaybe<StringFilter>;
  prev?: InputMaybe<PostPrevFilter>;
  next?: InputMaybe<PostNextFilter>;
  body?: InputMaybe<PostBodyFilter>;
};

export type PostConnectionEdges = {
  __typename?: 'PostConnectionEdges';
  cursor: Scalars['String'];
  node?: Maybe<Post>;
};

export type PostConnection = Connection & {
  __typename?: 'PostConnection';
  pageInfo: PageInfo;
  totalCount: Scalars['Float'];
  edges?: Maybe<Array<Maybe<PostConnectionEdges>>>;
};

export type AbtestTestsVariants = {
  __typename?: 'AbtestTestsVariants';
  testId?: Maybe<Scalars['String']>;
  href?: Maybe<Scalars['String']>;
};

export type AbtestTests = {
  __typename?: 'AbtestTests';
  testId?: Maybe<Scalars['String']>;
  href?: Maybe<Scalars['String']>;
  variants?: Maybe<Array<Maybe<AbtestTestsVariants>>>;
};

export type Abtest = Node & Document & {
  __typename?: 'Abtest';
  tests?: Maybe<Array<Maybe<AbtestTests>>>;
  id: Scalars['ID'];
  _sys: SystemInfo;
  _values: Scalars['JSON'];
};

export type AbtestTestsVariantsFilter = {
  testId?: InputMaybe<StringFilter>;
  href?: InputMaybe<StringFilter>;
};

export type AbtestTestsFilter = {
  testId?: InputMaybe<StringFilter>;
  href?: InputMaybe<StringFilter>;
  variants?: InputMaybe<AbtestTestsVariantsFilter>;
};

export type AbtestFilter = {
  tests?: InputMaybe<AbtestTestsFilter>;
};

export type AbtestConnectionEdges = {
  __typename?: 'AbtestConnectionEdges';
  cursor: Scalars['String'];
  node?: Maybe<Abtest>;
};

export type AbtestConnection = Connection & {
  __typename?: 'AbtestConnection';
  pageInfo: PageInfo;
  totalCount: Scalars['Float'];
  edges?: Maybe<Array<Maybe<AbtestConnectionEdges>>>;
};

export type Mutation = {
  __typename?: 'Mutation';
  addPendingDocument: DocumentNode;
  updateDocument: DocumentNode;
  deleteDocument: DocumentNode;
  createDocument: DocumentNode;
  updatePage: Page;
  createPage: Page;
  updateDoc: Doc;
  createDoc: Doc;
  updatePost: Post;
  createPost: Post;
  updateAbtest: Abtest;
  createAbtest: Abtest;
};


export type MutationAddPendingDocumentArgs = {
  collection: Scalars['String'];
  relativePath: Scalars['String'];
  template?: InputMaybe<Scalars['String']>;
};


export type MutationUpdateDocumentArgs = {
  collection?: InputMaybe<Scalars['String']>;
  relativePath: Scalars['String'];
  params: DocumentUpdateMutation;
};


export type MutationDeleteDocumentArgs = {
  collection?: InputMaybe<Scalars['String']>;
  relativePath: Scalars['String'];
};


export type MutationCreateDocumentArgs = {
  collection?: InputMaybe<Scalars['String']>;
  relativePath: Scalars['String'];
  params: DocumentMutation;
};


export type MutationUpdatePageArgs = {
  relativePath: Scalars['String'];
  params: PageMutation;
};


export type MutationCreatePageArgs = {
  relativePath: Scalars['String'];
  params: PageMutation;
};


export type MutationUpdateDocArgs = {
  relativePath: Scalars['String'];
  params: DocMutation;
};


export type MutationCreateDocArgs = {
  relativePath: Scalars['String'];
  params: DocMutation;
};


export type MutationUpdatePostArgs = {
  relativePath: Scalars['String'];
  params: PostMutation;
};


export type MutationCreatePostArgs = {
  relativePath: Scalars['String'];
  params: PostMutation;
};


export type MutationUpdateAbtestArgs = {
  relativePath: Scalars['String'];
  params: AbtestMutation;
};


export type MutationCreateAbtestArgs = {
  relativePath: Scalars['String'];
  params: AbtestMutation;
};

export type DocumentUpdateMutation = {
  page?: InputMaybe<PageMutation>;
  doc?: InputMaybe<DocMutation>;
  post?: InputMaybe<PostMutation>;
  abtest?: InputMaybe<AbtestMutation>;
  relativePath?: InputMaybe<Scalars['String']>;
};

export type DocumentMutation = {
  page?: InputMaybe<PageMutation>;
  doc?: InputMaybe<DocMutation>;
  post?: InputMaybe<PostMutation>;
  abtest?: InputMaybe<AbtestMutation>;
};

export type PageSeoMutation = {
  title?: InputMaybe<Scalars['String']>;
  description?: InputMaybe<Scalars['String']>;
};

export type PageBlocksHeroActionsMutation = {
  label?: InputMaybe<Scalars['String']>;
  icon?: InputMaybe<Scalars['Boolean']>;
  variant?: InputMaybe<Scalars['String']>;
  size?: InputMaybe<Scalars['String']>;
  url?: InputMaybe<Scalars['String']>;
};

export type PageBlocksHeroMutation = {
  headline?: InputMaybe<Scalars['String']>;
  text?: InputMaybe<Scalars['String']>;
  actions?: InputMaybe<Array<InputMaybe<PageBlocksHeroActionsMutation>>>;
  videoSrc?: InputMaybe<Scalars['String']>;
};

export type PageBlocksFeaturesItemsFeatureMediaMutation = {
  src?: InputMaybe<Scalars['String']>;
  videoSrc?: InputMaybe<Scalars['String']>;
  cli?: InputMaybe<Scalars['Boolean']>;
};

export type PageBlocksFeaturesItemsFeatureActionsMutation = {
  label?: InputMaybe<Scalars['String']>;
  icon?: InputMaybe<Scalars['Boolean']>;
  variant?: InputMaybe<Scalars['String']>;
  size?: InputMaybe<Scalars['String']>;
  url?: InputMaybe<Scalars['String']>;
};

export type PageBlocksFeaturesItemsFeatureMutation = {
  headline?: InputMaybe<Scalars['String']>;
  text?: InputMaybe<Scalars['String']>;
  media?: InputMaybe<PageBlocksFeaturesItemsFeatureMediaMutation>;
  actions?: InputMaybe<Array<InputMaybe<PageBlocksFeaturesItemsFeatureActionsMutation>>>;
};

export type PageBlocksFeaturesItemsMutation = {
  feature?: InputMaybe<PageBlocksFeaturesItemsFeatureMutation>;
};

export type PageBlocksFeaturesMutation = {
  items?: InputMaybe<Array<InputMaybe<PageBlocksFeaturesItemsMutation>>>;
};

export type PageBlocksFlyingActionsMutation = {
  label?: InputMaybe<Scalars['String']>;
  icon?: InputMaybe<Scalars['Boolean']>;
  variant?: InputMaybe<Scalars['String']>;
  size?: InputMaybe<Scalars['String']>;
  url?: InputMaybe<Scalars['String']>;
};

export type PageBlocksFlyingMutation = {
  headline?: InputMaybe<Scalars['String']>;
  text?: InputMaybe<Scalars['String']>;
  actions?: InputMaybe<Array<InputMaybe<PageBlocksFlyingActionsMutation>>>;
};

export type PageBlocksPricingBaseActionsMutation = {
  label?: InputMaybe<Scalars['String']>;
  icon?: InputMaybe<Scalars['Boolean']>;
  variant?: InputMaybe<Scalars['String']>;
  size?: InputMaybe<Scalars['String']>;
  url?: InputMaybe<Scalars['String']>;
};

export type PageBlocksPricingBaseMutation = {
  name?: InputMaybe<Scalars['String']>;
  price?: InputMaybe<Scalars['String']>;
  interval?: InputMaybe<Scalars['String']>;
  body?: InputMaybe<Scalars['JSON']>;
  actions?: InputMaybe<Array<InputMaybe<PageBlocksPricingBaseActionsMutation>>>;
};

export type PageBlocksPricingPlansActionsMutation = {
  label?: InputMaybe<Scalars['String']>;
  icon?: InputMaybe<Scalars['Boolean']>;
  variant?: InputMaybe<Scalars['String']>;
  size?: InputMaybe<Scalars['String']>;
  url?: InputMaybe<Scalars['String']>;
};

export type PageBlocksPricingPlansMutation = {
  name?: InputMaybe<Scalars['String']>;
  price?: InputMaybe<Scalars['String']>;
  interval?: InputMaybe<Scalars['String']>;
  body?: InputMaybe<Scalars['JSON']>;
  actions?: InputMaybe<Array<InputMaybe<PageBlocksPricingPlansActionsMutation>>>;
};

export type PageBlocksPricingMutation = {
  intro?: InputMaybe<Scalars['JSON']>;
  base?: InputMaybe<PageBlocksPricingBaseMutation>;
  plans?: InputMaybe<Array<InputMaybe<PageBlocksPricingPlansMutation>>>;
};

export type PageBlocksFaqQuestionsMutation = {
  question?: InputMaybe<Scalars['String']>;
  answer?: InputMaybe<Scalars['JSON']>;
};

export type PageBlocksFaqMutation = {
  title?: InputMaybe<Scalars['String']>;
  intro?: InputMaybe<Scalars['JSON']>;
  questions?: InputMaybe<Array<InputMaybe<PageBlocksFaqQuestionsMutation>>>;
  color?: InputMaybe<Scalars['String']>;
};

export type PageBlocksContentOptionsMutation = {
  narrow?: InputMaybe<Scalars['Boolean']>;
  color?: InputMaybe<Scalars['String']>;
  align?: InputMaybe<Scalars['String']>;
};

export type PageBlocksContentMutation = {
  options?: InputMaybe<PageBlocksContentOptionsMutation>;
  content?: InputMaybe<Scalars['JSON']>;
};

export type PageBlocksShowcaseItemsMediaMutation = {
  src?: InputMaybe<Scalars['String']>;
};

export type PageBlocksShowcaseItemsMutation = {
  headline?: InputMaybe<Scalars['String']>;
  text?: InputMaybe<Scalars['String']>;
  url?: InputMaybe<Scalars['String']>;
  media?: InputMaybe<PageBlocksShowcaseItemsMediaMutation>;
};

export type PageBlocksShowcaseMutation = {
  items?: InputMaybe<Array<InputMaybe<PageBlocksShowcaseItemsMutation>>>;
};

export type PageBlocksColumnsOptionsMutation = {
  columns?: InputMaybe<Scalars['String']>;
  narrow?: InputMaybe<Scalars['Boolean']>;
  color?: InputMaybe<Scalars['String']>;
  align?: InputMaybe<Scalars['String']>;
};

export type PageBlocksColumnsMutation = {
  options?: InputMaybe<PageBlocksColumnsOptionsMutation>;
  columnOne?: InputMaybe<Scalars['JSON']>;
  columnTwo?: InputMaybe<Scalars['JSON']>;
};

export type PageBlocksStoryMutation = {
  title?: InputMaybe<Scalars['String']>;
};

export type PageBlocksFeatureGridItemsActionsMutation = {
  label?: InputMaybe<Scalars['String']>;
  icon?: InputMaybe<Scalars['Boolean']>;
  variant?: InputMaybe<Scalars['String']>;
  size?: InputMaybe<Scalars['String']>;
  url?: InputMaybe<Scalars['String']>;
};

export type PageBlocksFeatureGridItemsMutation = {
  headline?: InputMaybe<Scalars['String']>;
  text?: InputMaybe<Scalars['String']>;
  actions?: InputMaybe<Array<InputMaybe<PageBlocksFeatureGridItemsActionsMutation>>>;
};

export type PageBlocksFeatureGridMutation = {
  items?: InputMaybe<Array<InputMaybe<PageBlocksFeatureGridItemsMutation>>>;
};

export type PageBlocksLogoGridItemsMutation = {
  name?: InputMaybe<Scalars['String']>;
  logo?: InputMaybe<Scalars['String']>;
  size?: InputMaybe<Scalars['Float']>;
};

export type PageBlocksLogoGridMutation = {
  title?: InputMaybe<Scalars['String']>;
  link?: InputMaybe<Scalars['String']>;
  items?: InputMaybe<Array<InputMaybe<PageBlocksLogoGridItemsMutation>>>;
};

export type PageBlocksRoadmapGridItemsActionsMutation = {
  label?: InputMaybe<Scalars['String']>;
  icon?: InputMaybe<Scalars['Boolean']>;
  variant?: InputMaybe<Scalars['String']>;
  size?: InputMaybe<Scalars['String']>;
  url?: InputMaybe<Scalars['String']>;
};

export type PageBlocksRoadmapGridItemsMutation = {
  headline?: InputMaybe<Scalars['String']>;
  status?: InputMaybe<Scalars['String']>;
  content?: InputMaybe<Scalars['JSON']>;
  actions?: InputMaybe<Array<InputMaybe<PageBlocksRoadmapGridItemsActionsMutation>>>;
};

export type PageBlocksRoadmapGridOptionsMutation = {
  paddingTop?: InputMaybe<Scalars['Boolean']>;
  paddingBottom?: InputMaybe<Scalars['Boolean']>;
};

export type PageBlocksRoadmapGridMutation = {
  headline?: InputMaybe<Scalars['String']>;
  items?: InputMaybe<Array<InputMaybe<PageBlocksRoadmapGridItemsMutation>>>;
  options?: InputMaybe<PageBlocksRoadmapGridOptionsMutation>;
};

export type PageBlocksRecentPostsMutation = {
  title?: InputMaybe<Scalars['String']>;
};

export type PageBlocksMutation = {
  hero?: InputMaybe<PageBlocksHeroMutation>;
  features?: InputMaybe<PageBlocksFeaturesMutation>;
  flying?: InputMaybe<PageBlocksFlyingMutation>;
  pricing?: InputMaybe<PageBlocksPricingMutation>;
  faq?: InputMaybe<PageBlocksFaqMutation>;
  content?: InputMaybe<PageBlocksContentMutation>;
  showcase?: InputMaybe<PageBlocksShowcaseMutation>;
  columns?: InputMaybe<PageBlocksColumnsMutation>;
  story?: InputMaybe<PageBlocksStoryMutation>;
  featureGrid?: InputMaybe<PageBlocksFeatureGridMutation>;
  logoGrid?: InputMaybe<PageBlocksLogoGridMutation>;
  roadmapGrid?: InputMaybe<PageBlocksRoadmapGridMutation>;
  recentPosts?: InputMaybe<PageBlocksRecentPostsMutation>;
};

export type PageMutation = {
  seo?: InputMaybe<PageSeoMutation>;
  blocks?: InputMaybe<Array<InputMaybe<PageBlocksMutation>>>;
};

export type DocMutation = {
  title?: InputMaybe<Scalars['String']>;
  last_edited?: InputMaybe<Scalars['String']>;
  prev?: InputMaybe<Scalars['String']>;
  next?: InputMaybe<Scalars['String']>;
  body?: InputMaybe<Scalars['JSON']>;
};

export type PostMutation = {
  title?: InputMaybe<Scalars['String']>;
  date?: InputMaybe<Scalars['String']>;
  last_edited?: InputMaybe<Scalars['String']>;
  author?: InputMaybe<Scalars['String']>;
  prev?: InputMaybe<Scalars['String']>;
  next?: InputMaybe<Scalars['String']>;
  body?: InputMaybe<Scalars['JSON']>;
};

export type AbtestTestsVariantsMutation = {
  testId?: InputMaybe<Scalars['String']>;
  href?: InputMaybe<Scalars['String']>;
};

export type AbtestTestsMutation = {
  testId?: InputMaybe<Scalars['String']>;
  href?: InputMaybe<Scalars['String']>;
  variants?: InputMaybe<Array<InputMaybe<AbtestTestsVariantsMutation>>>;
};

export type AbtestMutation = {
  tests?: InputMaybe<Array<InputMaybe<AbtestTestsMutation>>>;
};

export type GetExpandedPostDocumentQueryVariables = Exact<{
  relativePath: Scalars['String'];
}>;


export type GetExpandedPostDocumentQuery = { __typename?: 'Query', post: { __typename?: 'Post', id: string, title: string, date?: string | null, last_edited?: string | null, author?: string | null, body?: any | null, _sys: { __typename?: 'SystemInfo', filename: string, basename: string, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string }, prev?: { __typename?: 'Post', id: string, title: string } | null, next?: { __typename?: 'Post', id: string, title: string } | null } };

export type PageWithRecentPostsQueryVariables = Exact<{
  relativePath: Scalars['String'];
}>;


export type PageWithRecentPostsQuery = { __typename?: 'Query', page: { __typename?: 'Page', id: string, _sys: { __typename?: 'SystemInfo', filename: string, basename: string, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string }, seo?: { __typename: 'PageSeo', title?: string | null, description?: string | null } | null, blocks?: Array<{ __typename: 'PageBlocksHero', headline?: string | null, text?: string | null, videoSrc?: string | null, actions?: Array<{ __typename: 'PageBlocksHeroActions', label?: string | null, icon?: boolean | null, variant?: string | null, size?: string | null, url?: string | null } | null> | null } | { __typename: 'PageBlocksFeatures', items?: Array<{ __typename: 'PageBlocksFeaturesItemsFeature', headline?: string | null, text?: string | null, media?: { __typename: 'PageBlocksFeaturesItemsFeatureMedia', src?: string | null, videoSrc?: string | null, cli?: boolean | null } | null, actions?: Array<{ __typename: 'PageBlocksFeaturesItemsFeatureActions', label?: string | null, icon?: boolean | null, variant?: string | null, size?: string | null, url?: string | null } | null> | null } | null> | null } | { __typename: 'PageBlocksFlying', headline?: string | null, text?: string | null, actions?: Array<{ __typename: 'PageBlocksFlyingActions', label?: string | null, icon?: boolean | null, variant?: string | null, size?: string | null, url?: string | null } | null> | null } | { __typename: 'PageBlocksPricing', intro?: any | null, base?: { __typename: 'PageBlocksPricingBase', name?: string | null, price?: string | null, interval?: string | null, body?: any | null, actions?: Array<{ __typename: 'PageBlocksPricingBaseActions', label?: string | null, icon?: boolean | null, variant?: string | null, size?: string | null, url?: string | null } | null> | null } | null, plans?: Array<{ __typename: 'PageBlocksPricingPlans', name?: string | null, price?: string | null, interval?: string | null, body?: any | null, actions?: Array<{ __typename: 'PageBlocksPricingPlansActions', label?: string | null, icon?: boolean | null, variant?: string | null, size?: string | null, url?: string | null } | null> | null } | null> | null } | { __typename: 'PageBlocksFaq', title?: string | null, intro?: any | null, color?: string | null, questions?: Array<{ __typename: 'PageBlocksFaqQuestions', question?: string | null, answer?: any | null } | null> | null } | { __typename: 'PageBlocksContent', content?: any | null, options?: { __typename: 'PageBlocksContentOptions', narrow?: boolean | null, color?: string | null, align?: string | null } | null } | { __typename: 'PageBlocksShowcase', items?: Array<{ __typename: 'PageBlocksShowcaseItems', headline?: string | null, text?: string | null, url?: string | null, media?: { __typename: 'PageBlocksShowcaseItemsMedia', src?: string | null } | null } | null> | null } | { __typename: 'PageBlocksColumns', columnOne?: any | null, columnTwo?: any | null, options?: { __typename: 'PageBlocksColumnsOptions', columns?: string | null, narrow?: boolean | null, color?: string | null, align?: string | null } | null } | { __typename: 'PageBlocksStory', title?: string | null } | { __typename: 'PageBlocksFeatureGrid', items?: Array<{ __typename: 'PageBlocksFeatureGridItems', headline?: string | null, text?: string | null, actions?: Array<{ __typename: 'PageBlocksFeatureGridItemsActions', label?: string | null, icon?: boolean | null, variant?: string | null, size?: string | null, url?: string | null } | null> | null } | null> | null } | { __typename: 'PageBlocksLogoGrid', title?: string | null, link?: string | null, items?: Array<{ __typename: 'PageBlocksLogoGridItems', name?: string | null, logo?: string | null, size?: number | null } | null> | null } | { __typename: 'PageBlocksRoadmapGrid', headline?: string | null, items?: Array<{ __typename: 'PageBlocksRoadmapGridItems', headline?: string | null, status?: string | null, content?: any | null, actions?: Array<{ __typename: 'PageBlocksRoadmapGridItemsActions', label?: string | null, icon?: boolean | null, variant?: string | null, size?: string | null, url?: string | null } | null> | null } | null> | null, options?: { __typename: 'PageBlocksRoadmapGridOptions', paddingTop?: boolean | null, paddingBottom?: boolean | null } | null } | { __typename: 'PageBlocksRecentPosts', title?: string | null } | null> | null }, recentPosts: { __typename?: 'PostConnection', edges?: Array<{ __typename?: 'PostConnectionEdges', node?: { __typename?: 'Post', title: string, date?: string | null, last_edited?: string | null, author?: string | null, body?: any | null, _sys: { __typename?: 'SystemInfo', filename: string, basename: string, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string }, prev?: { __typename?: 'Post', title: string, date?: string | null, last_edited?: string | null, author?: string | null, body?: any | null, id: string, prev?: { __typename?: 'Post', title: string, date?: string | null, last_edited?: string | null, author?: string | null, body?: any | null, id: string } | null, next?: { __typename?: 'Post', title: string, date?: string | null, last_edited?: string | null, author?: string | null, body?: any | null, id: string } | null } | null, next?: { __typename?: 'Post', title: string, date?: string | null, last_edited?: string | null, author?: string | null, body?: any | null, id: string, prev?: { __typename?: 'Post', title: string, date?: string | null, last_edited?: string | null, author?: string | null, body?: any | null, id: string } | null, next?: { __typename?: 'Post', title: string, date?: string | null, last_edited?: string | null, author?: string | null, body?: any | null, id: string } | null } | null } | null } | null> | null } };

export type PagePartsFragment = { __typename?: 'Page', seo?: { __typename: 'PageSeo', title?: string | null, description?: string | null } | null, blocks?: Array<{ __typename: 'PageBlocksHero', headline?: string | null, text?: string | null, videoSrc?: string | null, actions?: Array<{ __typename: 'PageBlocksHeroActions', label?: string | null, icon?: boolean | null, variant?: string | null, size?: string | null, url?: string | null } | null> | null } | { __typename: 'PageBlocksFeatures', items?: Array<{ __typename: 'PageBlocksFeaturesItemsFeature', headline?: string | null, text?: string | null, media?: { __typename: 'PageBlocksFeaturesItemsFeatureMedia', src?: string | null, videoSrc?: string | null, cli?: boolean | null } | null, actions?: Array<{ __typename: 'PageBlocksFeaturesItemsFeatureActions', label?: string | null, icon?: boolean | null, variant?: string | null, size?: string | null, url?: string | null } | null> | null } | null> | null } | { __typename: 'PageBlocksFlying', headline?: string | null, text?: string | null, actions?: Array<{ __typename: 'PageBlocksFlyingActions', label?: string | null, icon?: boolean | null, variant?: string | null, size?: string | null, url?: string | null } | null> | null } | { __typename: 'PageBlocksPricing', intro?: any | null, base?: { __typename: 'PageBlocksPricingBase', name?: string | null, price?: string | null, interval?: string | null, body?: any | null, actions?: Array<{ __typename: 'PageBlocksPricingBaseActions', label?: string | null, icon?: boolean | null, variant?: string | null, size?: string | null, url?: string | null } | null> | null } | null, plans?: Array<{ __typename: 'PageBlocksPricingPlans', name?: string | null, price?: string | null, interval?: string | null, body?: any | null, actions?: Array<{ __typename: 'PageBlocksPricingPlansActions', label?: string | null, icon?: boolean | null, variant?: string | null, size?: string | null, url?: string | null } | null> | null } | null> | null } | { __typename: 'PageBlocksFaq', title?: string | null, intro?: any | null, color?: string | null, questions?: Array<{ __typename: 'PageBlocksFaqQuestions', question?: string | null, answer?: any | null } | null> | null } | { __typename: 'PageBlocksContent', content?: any | null, options?: { __typename: 'PageBlocksContentOptions', narrow?: boolean | null, color?: string | null, align?: string | null } | null } | { __typename: 'PageBlocksShowcase', items?: Array<{ __typename: 'PageBlocksShowcaseItems', headline?: string | null, text?: string | null, url?: string | null, media?: { __typename: 'PageBlocksShowcaseItemsMedia', src?: string | null } | null } | null> | null } | { __typename: 'PageBlocksColumns', columnOne?: any | null, columnTwo?: any | null, options?: { __typename: 'PageBlocksColumnsOptions', columns?: string | null, narrow?: boolean | null, color?: string | null, align?: string | null } | null } | { __typename: 'PageBlocksStory', title?: string | null } | { __typename: 'PageBlocksFeatureGrid', items?: Array<{ __typename: 'PageBlocksFeatureGridItems', headline?: string | null, text?: string | null, actions?: Array<{ __typename: 'PageBlocksFeatureGridItemsActions', label?: string | null, icon?: boolean | null, variant?: string | null, size?: string | null, url?: string | null } | null> | null } | null> | null } | { __typename: 'PageBlocksLogoGrid', title?: string | null, link?: string | null, items?: Array<{ __typename: 'PageBlocksLogoGridItems', name?: string | null, logo?: string | null, size?: number | null } | null> | null } | { __typename: 'PageBlocksRoadmapGrid', headline?: string | null, items?: Array<{ __typename: 'PageBlocksRoadmapGridItems', headline?: string | null, status?: string | null, content?: any | null, actions?: Array<{ __typename: 'PageBlocksRoadmapGridItemsActions', label?: string | null, icon?: boolean | null, variant?: string | null, size?: string | null, url?: string | null } | null> | null } | null> | null, options?: { __typename: 'PageBlocksRoadmapGridOptions', paddingTop?: boolean | null, paddingBottom?: boolean | null } | null } | { __typename: 'PageBlocksRecentPosts', title?: string | null } | null> | null };

export type DocPartsFragment = { __typename?: 'Doc', title?: string | null, last_edited?: string | null, prev?: string | null, next?: string | null, body?: any | null };

export type PostPartsFragment = { __typename?: 'Post', title: string, date?: string | null, last_edited?: string | null, author?: string | null, body?: any | null, prev?: { __typename?: 'Post', title: string, date?: string | null, last_edited?: string | null, author?: string | null, body?: any | null, id: string, prev?: { __typename?: 'Post', title: string, date?: string | null, last_edited?: string | null, author?: string | null, body?: any | null, id: string } | null, next?: { __typename?: 'Post', title: string, date?: string | null, last_edited?: string | null, author?: string | null, body?: any | null, id: string } | null } | null, next?: { __typename?: 'Post', title: string, date?: string | null, last_edited?: string | null, author?: string | null, body?: any | null, id: string, prev?: { __typename?: 'Post', title: string, date?: string | null, last_edited?: string | null, author?: string | null, body?: any | null, id: string } | null, next?: { __typename?: 'Post', title: string, date?: string | null, last_edited?: string | null, author?: string | null, body?: any | null, id: string } | null } | null };

export type AbtestPartsFragment = { __typename?: 'Abtest', tests?: Array<{ __typename: 'AbtestTests', testId?: string | null, href?: string | null, variants?: Array<{ __typename: 'AbtestTestsVariants', testId?: string | null, href?: string | null } | null> | null } | null> | null };

export type PageQueryVariables = Exact<{
  relativePath: Scalars['String'];
}>;


export type PageQuery = { __typename?: 'Query', page: { __typename?: 'Page', id: string, _sys: { __typename?: 'SystemInfo', filename: string, basename: string, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string }, seo?: { __typename: 'PageSeo', title?: string | null, description?: string | null } | null, blocks?: Array<{ __typename: 'PageBlocksHero', headline?: string | null, text?: string | null, videoSrc?: string | null, actions?: Array<{ __typename: 'PageBlocksHeroActions', label?: string | null, icon?: boolean | null, variant?: string | null, size?: string | null, url?: string | null } | null> | null } | { __typename: 'PageBlocksFeatures', items?: Array<{ __typename: 'PageBlocksFeaturesItemsFeature', headline?: string | null, text?: string | null, media?: { __typename: 'PageBlocksFeaturesItemsFeatureMedia', src?: string | null, videoSrc?: string | null, cli?: boolean | null } | null, actions?: Array<{ __typename: 'PageBlocksFeaturesItemsFeatureActions', label?: string | null, icon?: boolean | null, variant?: string | null, size?: string | null, url?: string | null } | null> | null } | null> | null } | { __typename: 'PageBlocksFlying', headline?: string | null, text?: string | null, actions?: Array<{ __typename: 'PageBlocksFlyingActions', label?: string | null, icon?: boolean | null, variant?: string | null, size?: string | null, url?: string | null } | null> | null } | { __typename: 'PageBlocksPricing', intro?: any | null, base?: { __typename: 'PageBlocksPricingBase', name?: string | null, price?: string | null, interval?: string | null, body?: any | null, actions?: Array<{ __typename: 'PageBlocksPricingBaseActions', label?: string | null, icon?: boolean | null, variant?: string | null, size?: string | null, url?: string | null } | null> | null } | null, plans?: Array<{ __typename: 'PageBlocksPricingPlans', name?: string | null, price?: string | null, interval?: string | null, body?: any | null, actions?: Array<{ __typename: 'PageBlocksPricingPlansActions', label?: string | null, icon?: boolean | null, variant?: string | null, size?: string | null, url?: string | null } | null> | null } | null> | null } | { __typename: 'PageBlocksFaq', title?: string | null, intro?: any | null, color?: string | null, questions?: Array<{ __typename: 'PageBlocksFaqQuestions', question?: string | null, answer?: any | null } | null> | null } | { __typename: 'PageBlocksContent', content?: any | null, options?: { __typename: 'PageBlocksContentOptions', narrow?: boolean | null, color?: string | null, align?: string | null } | null } | { __typename: 'PageBlocksShowcase', items?: Array<{ __typename: 'PageBlocksShowcaseItems', headline?: string | null, text?: string | null, url?: string | null, media?: { __typename: 'PageBlocksShowcaseItemsMedia', src?: string | null } | null } | null> | null } | { __typename: 'PageBlocksColumns', columnOne?: any | null, columnTwo?: any | null, options?: { __typename: 'PageBlocksColumnsOptions', columns?: string | null, narrow?: boolean | null, color?: string | null, align?: string | null } | null } | { __typename: 'PageBlocksStory', title?: string | null } | { __typename: 'PageBlocksFeatureGrid', items?: Array<{ __typename: 'PageBlocksFeatureGridItems', headline?: string | null, text?: string | null, actions?: Array<{ __typename: 'PageBlocksFeatureGridItemsActions', label?: string | null, icon?: boolean | null, variant?: string | null, size?: string | null, url?: string | null } | null> | null } | null> | null } | { __typename: 'PageBlocksLogoGrid', title?: string | null, link?: string | null, items?: Array<{ __typename: 'PageBlocksLogoGridItems', name?: string | null, logo?: string | null, size?: number | null } | null> | null } | { __typename: 'PageBlocksRoadmapGrid', headline?: string | null, items?: Array<{ __typename: 'PageBlocksRoadmapGridItems', headline?: string | null, status?: string | null, content?: any | null, actions?: Array<{ __typename: 'PageBlocksRoadmapGridItemsActions', label?: string | null, icon?: boolean | null, variant?: string | null, size?: string | null, url?: string | null } | null> | null } | null> | null, options?: { __typename: 'PageBlocksRoadmapGridOptions', paddingTop?: boolean | null, paddingBottom?: boolean | null } | null } | { __typename: 'PageBlocksRecentPosts', title?: string | null } | null> | null } };

export type PageConnectionQueryVariables = Exact<{
  before?: InputMaybe<Scalars['String']>;
  after?: InputMaybe<Scalars['String']>;
  first?: InputMaybe<Scalars['Float']>;
  last?: InputMaybe<Scalars['Float']>;
  sort?: InputMaybe<Scalars['String']>;
  filter?: InputMaybe<PageFilter>;
}>;


export type PageConnectionQuery = { __typename?: 'Query', pageConnection: { __typename?: 'PageConnection', totalCount: number, pageInfo: { __typename?: 'PageInfo', hasPreviousPage: boolean, hasNextPage: boolean, startCursor: string, endCursor: string }, edges?: Array<{ __typename?: 'PageConnectionEdges', cursor: string, node?: { __typename?: 'Page', id: string, _sys: { __typename?: 'SystemInfo', filename: string, basename: string, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string }, seo?: { __typename: 'PageSeo', title?: string | null, description?: string | null } | null, blocks?: Array<{ __typename: 'PageBlocksHero', headline?: string | null, text?: string | null, videoSrc?: string | null, actions?: Array<{ __typename: 'PageBlocksHeroActions', label?: string | null, icon?: boolean | null, variant?: string | null, size?: string | null, url?: string | null } | null> | null } | { __typename: 'PageBlocksFeatures', items?: Array<{ __typename: 'PageBlocksFeaturesItemsFeature', headline?: string | null, text?: string | null, media?: { __typename: 'PageBlocksFeaturesItemsFeatureMedia', src?: string | null, videoSrc?: string | null, cli?: boolean | null } | null, actions?: Array<{ __typename: 'PageBlocksFeaturesItemsFeatureActions', label?: string | null, icon?: boolean | null, variant?: string | null, size?: string | null, url?: string | null } | null> | null } | null> | null } | { __typename: 'PageBlocksFlying', headline?: string | null, text?: string | null, actions?: Array<{ __typename: 'PageBlocksFlyingActions', label?: string | null, icon?: boolean | null, variant?: string | null, size?: string | null, url?: string | null } | null> | null } | { __typename: 'PageBlocksPricing', intro?: any | null, base?: { __typename: 'PageBlocksPricingBase', name?: string | null, price?: string | null, interval?: string | null, body?: any | null, actions?: Array<{ __typename: 'PageBlocksPricingBaseActions', label?: string | null, icon?: boolean | null, variant?: string | null, size?: string | null, url?: string | null } | null> | null } | null, plans?: Array<{ __typename: 'PageBlocksPricingPlans', name?: string | null, price?: string | null, interval?: string | null, body?: any | null, actions?: Array<{ __typename: 'PageBlocksPricingPlansActions', label?: string | null, icon?: boolean | null, variant?: string | null, size?: string | null, url?: string | null } | null> | null } | null> | null } | { __typename: 'PageBlocksFaq', title?: string | null, intro?: any | null, color?: string | null, questions?: Array<{ __typename: 'PageBlocksFaqQuestions', question?: string | null, answer?: any | null } | null> | null } | { __typename: 'PageBlocksContent', content?: any | null, options?: { __typename: 'PageBlocksContentOptions', narrow?: boolean | null, color?: string | null, align?: string | null } | null } | { __typename: 'PageBlocksShowcase', items?: Array<{ __typename: 'PageBlocksShowcaseItems', headline?: string | null, text?: string | null, url?: string | null, media?: { __typename: 'PageBlocksShowcaseItemsMedia', src?: string | null } | null } | null> | null } | { __typename: 'PageBlocksColumns', columnOne?: any | null, columnTwo?: any | null, options?: { __typename: 'PageBlocksColumnsOptions', columns?: string | null, narrow?: boolean | null, color?: string | null, align?: string | null } | null } | { __typename: 'PageBlocksStory', title?: string | null } | { __typename: 'PageBlocksFeatureGrid', items?: Array<{ __typename: 'PageBlocksFeatureGridItems', headline?: string | null, text?: string | null, actions?: Array<{ __typename: 'PageBlocksFeatureGridItemsActions', label?: string | null, icon?: boolean | null, variant?: string | null, size?: string | null, url?: string | null } | null> | null } | null> | null } | { __typename: 'PageBlocksLogoGrid', title?: string | null, link?: string | null, items?: Array<{ __typename: 'PageBlocksLogoGridItems', name?: string | null, logo?: string | null, size?: number | null } | null> | null } | { __typename: 'PageBlocksRoadmapGrid', headline?: string | null, items?: Array<{ __typename: 'PageBlocksRoadmapGridItems', headline?: string | null, status?: string | null, content?: any | null, actions?: Array<{ __typename: 'PageBlocksRoadmapGridItemsActions', label?: string | null, icon?: boolean | null, variant?: string | null, size?: string | null, url?: string | null } | null> | null } | null> | null, options?: { __typename: 'PageBlocksRoadmapGridOptions', paddingTop?: boolean | null, paddingBottom?: boolean | null } | null } | { __typename: 'PageBlocksRecentPosts', title?: string | null } | null> | null } | null } | null> | null } };

export type DocQueryVariables = Exact<{
  relativePath: Scalars['String'];
}>;


export type DocQuery = { __typename?: 'Query', doc: { __typename?: 'Doc', id: string, title?: string | null, last_edited?: string | null, prev?: string | null, next?: string | null, body?: any | null, _sys: { __typename?: 'SystemInfo', filename: string, basename: string, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string } } };

export type DocConnectionQueryVariables = Exact<{
  before?: InputMaybe<Scalars['String']>;
  after?: InputMaybe<Scalars['String']>;
  first?: InputMaybe<Scalars['Float']>;
  last?: InputMaybe<Scalars['Float']>;
  sort?: InputMaybe<Scalars['String']>;
  filter?: InputMaybe<DocFilter>;
}>;


export type DocConnectionQuery = { __typename?: 'Query', docConnection: { __typename?: 'DocConnection', totalCount: number, pageInfo: { __typename?: 'PageInfo', hasPreviousPage: boolean, hasNextPage: boolean, startCursor: string, endCursor: string }, edges?: Array<{ __typename?: 'DocConnectionEdges', cursor: string, node?: { __typename?: 'Doc', id: string, title?: string | null, last_edited?: string | null, prev?: string | null, next?: string | null, body?: any | null, _sys: { __typename?: 'SystemInfo', filename: string, basename: string, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string } } | null } | null> | null } };

export type PostQueryVariables = Exact<{
  relativePath: Scalars['String'];
}>;


export type PostQuery = { __typename?: 'Query', post: { __typename?: 'Post', id: string, title: string, date?: string | null, last_edited?: string | null, author?: string | null, body?: any | null, _sys: { __typename?: 'SystemInfo', filename: string, basename: string, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string }, prev?: { __typename?: 'Post', title: string, date?: string | null, last_edited?: string | null, author?: string | null, body?: any | null, id: string, prev?: { __typename?: 'Post', title: string, date?: string | null, last_edited?: string | null, author?: string | null, body?: any | null, id: string } | null, next?: { __typename?: 'Post', title: string, date?: string | null, last_edited?: string | null, author?: string | null, body?: any | null, id: string } | null } | null, next?: { __typename?: 'Post', title: string, date?: string | null, last_edited?: string | null, author?: string | null, body?: any | null, id: string, prev?: { __typename?: 'Post', title: string, date?: string | null, last_edited?: string | null, author?: string | null, body?: any | null, id: string } | null, next?: { __typename?: 'Post', title: string, date?: string | null, last_edited?: string | null, author?: string | null, body?: any | null, id: string } | null } | null } };

export type PostConnectionQueryVariables = Exact<{
  before?: InputMaybe<Scalars['String']>;
  after?: InputMaybe<Scalars['String']>;
  first?: InputMaybe<Scalars['Float']>;
  last?: InputMaybe<Scalars['Float']>;
  sort?: InputMaybe<Scalars['String']>;
  filter?: InputMaybe<PostFilter>;
}>;


export type PostConnectionQuery = { __typename?: 'Query', postConnection: { __typename?: 'PostConnection', totalCount: number, pageInfo: { __typename?: 'PageInfo', hasPreviousPage: boolean, hasNextPage: boolean, startCursor: string, endCursor: string }, edges?: Array<{ __typename?: 'PostConnectionEdges', cursor: string, node?: { __typename?: 'Post', id: string, title: string, date?: string | null, last_edited?: string | null, author?: string | null, body?: any | null, _sys: { __typename?: 'SystemInfo', filename: string, basename: string, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string }, prev?: { __typename?: 'Post', title: string, date?: string | null, last_edited?: string | null, author?: string | null, body?: any | null, id: string, prev?: { __typename?: 'Post', title: string, date?: string | null, last_edited?: string | null, author?: string | null, body?: any | null, id: string } | null, next?: { __typename?: 'Post', title: string, date?: string | null, last_edited?: string | null, author?: string | null, body?: any | null, id: string } | null } | null, next?: { __typename?: 'Post', title: string, date?: string | null, last_edited?: string | null, author?: string | null, body?: any | null, id: string, prev?: { __typename?: 'Post', title: string, date?: string | null, last_edited?: string | null, author?: string | null, body?: any | null, id: string } | null, next?: { __typename?: 'Post', title: string, date?: string | null, last_edited?: string | null, author?: string | null, body?: any | null, id: string } | null } | null } | null } | null> | null } };

export type AbtestQueryVariables = Exact<{
  relativePath: Scalars['String'];
}>;


export type AbtestQuery = { __typename?: 'Query', abtest: { __typename?: 'Abtest', id: string, _sys: { __typename?: 'SystemInfo', filename: string, basename: string, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string }, tests?: Array<{ __typename: 'AbtestTests', testId?: string | null, href?: string | null, variants?: Array<{ __typename: 'AbtestTestsVariants', testId?: string | null, href?: string | null } | null> | null } | null> | null } };

export type AbtestConnectionQueryVariables = Exact<{
  before?: InputMaybe<Scalars['String']>;
  after?: InputMaybe<Scalars['String']>;
  first?: InputMaybe<Scalars['Float']>;
  last?: InputMaybe<Scalars['Float']>;
  sort?: InputMaybe<Scalars['String']>;
  filter?: InputMaybe<AbtestFilter>;
}>;


export type AbtestConnectionQuery = { __typename?: 'Query', abtestConnection: { __typename?: 'AbtestConnection', totalCount: number, pageInfo: { __typename?: 'PageInfo', hasPreviousPage: boolean, hasNextPage: boolean, startCursor: string, endCursor: string }, edges?: Array<{ __typename?: 'AbtestConnectionEdges', cursor: string, node?: { __typename?: 'Abtest', id: string, _sys: { __typename?: 'SystemInfo', filename: string, basename: string, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string }, tests?: Array<{ __typename: 'AbtestTests', testId?: string | null, href?: string | null, variants?: Array<{ __typename: 'AbtestTestsVariants', testId?: string | null, href?: string | null } | null> | null } | null> | null } | null } | null> | null } };

export const PagePartsFragmentDoc = gql`
    fragment PageParts on Page {
  seo {
    __typename
    title
    description
  }
  blocks {
    __typename
    ... on PageBlocksHero {
      headline
      text
      actions {
        __typename
        label
        icon
        variant
        size
        url
      }
      videoSrc
    }
    ... on PageBlocksFeatures {
      items {
        __typename
        ... on PageBlocksFeaturesItemsFeature {
          headline
          text
          media {
            __typename
            src
            videoSrc
            cli
          }
          actions {
            __typename
            label
            icon
            variant
            size
            url
          }
        }
      }
    }
    ... on PageBlocksFlying {
      headline
      text
      actions {
        __typename
        label
        icon
        variant
        size
        url
      }
    }
    ... on PageBlocksPricing {
      intro
      base {
        __typename
        name
        price
        interval
        body
        actions {
          __typename
          label
          icon
          variant
          size
          url
        }
      }
      plans {
        __typename
        name
        price
        interval
        body
        actions {
          __typename
          label
          icon
          variant
          size
          url
        }
      }
    }
    ... on PageBlocksFaq {
      title
      intro
      questions {
        __typename
        question
        answer
      }
      color
    }
    ... on PageBlocksContent {
      options {
        __typename
        narrow
        color
        align
      }
      content
    }
    ... on PageBlocksShowcase {
      items {
        __typename
        headline
        text
        url
        media {
          __typename
          src
        }
      }
    }
    ... on PageBlocksColumns {
      options {
        __typename
        columns
        narrow
        color
        align
      }
      columnOne
      columnTwo
    }
    ... on PageBlocksStory {
      title
    }
    ... on PageBlocksFeatureGrid {
      items {
        __typename
        headline
        text
        actions {
          __typename
          label
          icon
          variant
          size
          url
        }
      }
    }
    ... on PageBlocksLogoGrid {
      title
      link
      items {
        __typename
        name
        logo
        size
      }
    }
    ... on PageBlocksRoadmapGrid {
      headline
      items {
        __typename
        headline
        status
        content
        actions {
          __typename
          label
          icon
          variant
          size
          url
        }
      }
      options {
        __typename
        paddingTop
        paddingBottom
      }
    }
    ... on PageBlocksRecentPosts {
      title
    }
  }
}
    `;
export const DocPartsFragmentDoc = gql`
    fragment DocParts on Doc {
  title
  last_edited
  prev
  next
  body
}
    `;
export const PostPartsFragmentDoc = gql`
    fragment PostParts on Post {
  title
  date
  last_edited
  author
  prev {
    ... on Post {
      title
      date
      last_edited
      author
      prev {
        ... on Post {
          title
          date
          last_edited
          author
          body
        }
        ... on Document {
          id
        }
      }
      next {
        ... on Post {
          title
          date
          last_edited
          author
          body
        }
        ... on Document {
          id
        }
      }
      body
    }
    ... on Document {
      id
    }
  }
  next {
    ... on Post {
      title
      date
      last_edited
      author
      prev {
        ... on Post {
          title
          date
          last_edited
          author
          body
        }
        ... on Document {
          id
        }
      }
      next {
        ... on Post {
          title
          date
          last_edited
          author
          body
        }
        ... on Document {
          id
        }
      }
      body
    }
    ... on Document {
      id
    }
  }
  body
}
    `;
export const AbtestPartsFragmentDoc = gql`
    fragment AbtestParts on Abtest {
  tests {
    __typename
    testId
    href
    variants {
      __typename
      testId
      href
    }
  }
}
    `;
export const GetExpandedPostDocumentDocument = gql`
    query getExpandedPostDocument($relativePath: String!) {
  post(relativePath: $relativePath) {
    _sys {
      filename
      basename
      breadcrumbs
      path
      relativePath
      extension
    }
    id
    title
    date
    last_edited
    author
    prev {
      ... on Post {
        id
        title
      }
    }
    next {
      ... on Post {
        id
        title
      }
    }
    body
  }
}
    `;
export const PageWithRecentPostsDocument = gql`
    query pageWithRecentPosts($relativePath: String!) {
  page(relativePath: $relativePath) {
    ... on Document {
      _sys {
        filename
        basename
        breadcrumbs
        path
        relativePath
        extension
      }
      id
    }
    ...PageParts
  }
  recentPosts: postConnection(sort: "date", last: 2) {
    edges {
      node {
        _sys {
          filename
          basename
          breadcrumbs
          path
          relativePath
          extension
        }
        ...PostParts
      }
    }
  }
}
    ${PagePartsFragmentDoc}
${PostPartsFragmentDoc}`;
export const PageDocument = gql`
    query page($relativePath: String!) {
  page(relativePath: $relativePath) {
    ... on Document {
      _sys {
        filename
        basename
        breadcrumbs
        path
        relativePath
        extension
      }
      id
    }
    ...PageParts
  }
}
    ${PagePartsFragmentDoc}`;
export const PageConnectionDocument = gql`
    query pageConnection($before: String, $after: String, $first: Float, $last: Float, $sort: String, $filter: PageFilter) {
  pageConnection(
    before: $before
    after: $after
    first: $first
    last: $last
    sort: $sort
    filter: $filter
  ) {
    pageInfo {
      hasPreviousPage
      hasNextPage
      startCursor
      endCursor
    }
    totalCount
    edges {
      cursor
      node {
        ... on Document {
          _sys {
            filename
            basename
            breadcrumbs
            path
            relativePath
            extension
          }
          id
        }
        ...PageParts
      }
    }
  }
}
    ${PagePartsFragmentDoc}`;
export const DocDocument = gql`
    query doc($relativePath: String!) {
  doc(relativePath: $relativePath) {
    ... on Document {
      _sys {
        filename
        basename
        breadcrumbs
        path
        relativePath
        extension
      }
      id
    }
    ...DocParts
  }
}
    ${DocPartsFragmentDoc}`;
export const DocConnectionDocument = gql`
    query docConnection($before: String, $after: String, $first: Float, $last: Float, $sort: String, $filter: DocFilter) {
  docConnection(
    before: $before
    after: $after
    first: $first
    last: $last
    sort: $sort
    filter: $filter
  ) {
    pageInfo {
      hasPreviousPage
      hasNextPage
      startCursor
      endCursor
    }
    totalCount
    edges {
      cursor
      node {
        ... on Document {
          _sys {
            filename
            basename
            breadcrumbs
            path
            relativePath
            extension
          }
          id
        }
        ...DocParts
      }
    }
  }
}
    ${DocPartsFragmentDoc}`;
export const PostDocument = gql`
    query post($relativePath: String!) {
  post(relativePath: $relativePath) {
    ... on Document {
      _sys {
        filename
        basename
        breadcrumbs
        path
        relativePath
        extension
      }
      id
    }
    ...PostParts
  }
}
    ${PostPartsFragmentDoc}`;
export const PostConnectionDocument = gql`
    query postConnection($before: String, $after: String, $first: Float, $last: Float, $sort: String, $filter: PostFilter) {
  postConnection(
    before: $before
    after: $after
    first: $first
    last: $last
    sort: $sort
    filter: $filter
  ) {
    pageInfo {
      hasPreviousPage
      hasNextPage
      startCursor
      endCursor
    }
    totalCount
    edges {
      cursor
      node {
        ... on Document {
          _sys {
            filename
            basename
            breadcrumbs
            path
            relativePath
            extension
          }
          id
        }
        ...PostParts
      }
    }
  }
}
    ${PostPartsFragmentDoc}`;
export const AbtestDocument = gql`
    query abtest($relativePath: String!) {
  abtest(relativePath: $relativePath) {
    ... on Document {
      _sys {
        filename
        basename
        breadcrumbs
        path
        relativePath
        extension
      }
      id
    }
    ...AbtestParts
  }
}
    ${AbtestPartsFragmentDoc}`;
export const AbtestConnectionDocument = gql`
    query abtestConnection($before: String, $after: String, $first: Float, $last: Float, $sort: String, $filter: AbtestFilter) {
  abtestConnection(
    before: $before
    after: $after
    first: $first
    last: $last
    sort: $sort
    filter: $filter
  ) {
    pageInfo {
      hasPreviousPage
      hasNextPage
      startCursor
      endCursor
    }
    totalCount
    edges {
      cursor
      node {
        ... on Document {
          _sys {
            filename
            basename
            breadcrumbs
            path
            relativePath
            extension
          }
          id
        }
        ...AbtestParts
      }
    }
  }
}
    ${AbtestPartsFragmentDoc}`;
export type Requester<C= {}> = <R, V>(doc: DocumentNode, vars?: V, options?: C) => Promise<R>
  export function getSdk<C>(requester: Requester<C>) {
    return {
      getExpandedPostDocument(variables: GetExpandedPostDocumentQueryVariables, options?: C): Promise<{data: GetExpandedPostDocumentQuery, variables: GetExpandedPostDocumentQueryVariables, query: string}> {
        return requester<{data: GetExpandedPostDocumentQuery, variables: GetExpandedPostDocumentQueryVariables, query: string}, GetExpandedPostDocumentQueryVariables>(GetExpandedPostDocumentDocument, variables, options);
      },
    pageWithRecentPosts(variables: PageWithRecentPostsQueryVariables, options?: C): Promise<{data: PageWithRecentPostsQuery, variables: PageWithRecentPostsQueryVariables, query: string}> {
        return requester<{data: PageWithRecentPostsQuery, variables: PageWithRecentPostsQueryVariables, query: string}, PageWithRecentPostsQueryVariables>(PageWithRecentPostsDocument, variables, options);
      },
    page(variables: PageQueryVariables, options?: C): Promise<{data: PageQuery, variables: PageQueryVariables, query: string}> {
        return requester<{data: PageQuery, variables: PageQueryVariables, query: string}, PageQueryVariables>(PageDocument, variables, options);
      },
    pageConnection(variables?: PageConnectionQueryVariables, options?: C): Promise<{data: PageConnectionQuery, variables: PageConnectionQueryVariables, query: string}> {
        return requester<{data: PageConnectionQuery, variables: PageConnectionQueryVariables, query: string}, PageConnectionQueryVariables>(PageConnectionDocument, variables, options);
      },
    doc(variables: DocQueryVariables, options?: C): Promise<{data: DocQuery, variables: DocQueryVariables, query: string}> {
        return requester<{data: DocQuery, variables: DocQueryVariables, query: string}, DocQueryVariables>(DocDocument, variables, options);
      },
    docConnection(variables?: DocConnectionQueryVariables, options?: C): Promise<{data: DocConnectionQuery, variables: DocConnectionQueryVariables, query: string}> {
        return requester<{data: DocConnectionQuery, variables: DocConnectionQueryVariables, query: string}, DocConnectionQueryVariables>(DocConnectionDocument, variables, options);
      },
    post(variables: PostQueryVariables, options?: C): Promise<{data: PostQuery, variables: PostQueryVariables, query: string}> {
        return requester<{data: PostQuery, variables: PostQueryVariables, query: string}, PostQueryVariables>(PostDocument, variables, options);
      },
    postConnection(variables?: PostConnectionQueryVariables, options?: C): Promise<{data: PostConnectionQuery, variables: PostConnectionQueryVariables, query: string}> {
        return requester<{data: PostConnectionQuery, variables: PostConnectionQueryVariables, query: string}, PostConnectionQueryVariables>(PostConnectionDocument, variables, options);
      },
    abtest(variables: AbtestQueryVariables, options?: C): Promise<{data: AbtestQuery, variables: AbtestQueryVariables, query: string}> {
        return requester<{data: AbtestQuery, variables: AbtestQueryVariables, query: string}, AbtestQueryVariables>(AbtestDocument, variables, options);
      },
    abtestConnection(variables?: AbtestConnectionQueryVariables, options?: C): Promise<{data: AbtestConnectionQuery, variables: AbtestConnectionQueryVariables, query: string}> {
        return requester<{data: AbtestConnectionQuery, variables: AbtestConnectionQueryVariables, query: string}, AbtestConnectionQueryVariables>(AbtestConnectionDocument, variables, options);
      }
    };
  }
  export type Sdk = ReturnType<typeof getSdk>;

// TinaSDK generated code
import { createClient, TinaClient } from "tinacms/dist/client";

const generateRequester = (client: TinaClient) => {
  const requester: (
    doc: any,
    vars?: any,
    options?: any,
    client
  ) => Promise<any> = async (doc, vars, _options) => {
    const data = await client.request({
      query: doc,
      variables: vars,
    });

    return { data: data?.data, query: doc, variables: vars || {} };
  };

  return requester;
};

/**
 * @experimental this class can be used but may change in the future
 **/
export const ExperimentalGetTinaClient = () =>
  getSdk(
    generateRequester(createClient({ url: "http://localhost:4001/graphql", queries }))
  );

export const queries = (client: TinaClient) => {
  const requester = generateRequester(client);
  return getSdk(requester);
};

  